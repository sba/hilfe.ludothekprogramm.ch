{% block hits_items %}
  <ais-hits class="flex h-full" :transform-items="transformItems">
    <template slot-scope="{ items }">
      <span
        v-if="!Object.keys(items).length"
        class="p-4 italic text-gray-700 dark:text-gray-400 items-center"
      >
        {{ settings.interface.lang.no_results|t }}
      </span>
      <ul
        v-if="Object.keys(items).length"
        role="listbox"
        class="w-full divide-y divide-gray-200 dark:divide-gray-700"
        aria-labelledby="search-label"
      >
        <li v-for="(item, index) in items"
            :key="item.objectID"
            :id="`search-item-${index}`"
            :ref="`search-item-${item.objectID}`"
            @mouseenter="selected = item"
            role="option"
            :aria-selected="isSelected(item)"
            class="group"
            :class="{ 'relative z-10': isSelected(item) }"
        >
          <a
            class="flex justify-between transition-none items-center leading-normal py-1 px-4 overflow-hidden"
            :class="{
            'text-gray-900 dark:text-gray-300 bg-transparent': !isSelected(item),
            'text-white bg-algolia-pro shadow': isSelected(item)
          }"
            :href="`{{ uri.rootUrl }}${item.url}`"
          >
            <div class="flex items-start overflow-hidden">
              <div class="flex flex-col truncate">
                <div class="flex items-center truncate text-xs leading-tight md:order-2 opacity-75"
                     :class="{
                      'text-gray-900 dark:text-gray-300': !isSelected(item),
                      'text-white': isSelected(item)
                   }"
                >
                  <template v-for="(crumb, index) in item.breadcrumbs">
                    <template>
                      <div :key="`crumb-${index}`" class="flex-grow-0 truncate min-w-0">
                        [[ crumb.name ]]
                      </div>
                      <svg
                        v-if="index != item.breadcrumbs.length - 1"
                        :key="`icon-${index}`" viewBox="0 0 24 24"
                        fill="none"
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        class="block w-4 h-4 py-0.5 stroke-current stroke-2 flex-none opacity-60"
                        :class="{
                        'text-gray-400 dark:text-gray-300': !isSelected(item),
                        'text-white': isSelected(item)
                      }"
                      >
                        <polyline points="9 18 15 12 9 6"></polyline>
                      </svg>
                    </template>
                  </template>
                </div>
                <div class="md:order-1 truncate min-w-0 font-semibold"
                     :class="{
                      'text-gray-500 dark:text-gray-300': !isSelected(item),
                      'text-white': isSelected(item)
                   }"
                >
                  <div
                    class="truncate"
                    :title="`${item.title} ${item.subtitle && {{ settings.interface.subtitle ? 1 : 0 }} ? `(${item.subtitle})` : ''}`"
                  >
                    <ais-highlight
                      attribute="title"
                      :hit="item"
                      highlighted-tag-name="span"
                      :class-names="{
                        'ais-Highlight': 'truncate',
                        'ais-Highlight-highlighted': `bg-transparent ${!isSelected(item) ? 'text-algolia-pro' : 'text-white'}`,
                    }"
                    ></ais-highlight>

                    {% if settings.interface.subtitle %}
                    <template v-if="item.subtitle">
                      (<ais-highlight
                        attribute="subtitle"
                        :hit="item"
                        highlighted-tag-name="span"
                        :class-names="{
                          'ais-Highlight': 'truncate',
                          'ais-Highlight-highlighted': `bg-transparent ${!isSelected(item) ? 'text-algolia-pro' : 'text-white'}`,
                      }"
                      ></ais-highlight>)
                    </template>
                    {% endif %}
                  </div>
                </div>
              </div>
            </div>
            <div class="w-6 ml-2 p-0.5 flex-none hidden" :class="{ 'flex': isSelected(item) }">
              <svg viewBox="0 0 24 24" fill="none" stroke="currentColor"
                   stroke-width="2" stroke-linecap="round"
                   stroke-linejoin="round" class="block h-auto w-4">
                <polyline points="9 10 4 15 9 20"></polyline>
                <path d="M20 4v7a4 4 0 0 1-4 4H4"></path>
              </svg>
            </div>
          </a>
        </li>
      </ul>
    </template>
  </ais-hits>
{% endblock %}
